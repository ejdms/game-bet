{"version":3,"sources":["reducers/game.js","reducers/history.js","reducers/info.js","reducers/index.js","store.js","components/RetroLayout.js","actions/index.js","components/GameField.js","components/GameHeader.js","components/GameColumns.js","components/GameColorColumn.js","components/GameOptions.js","components/GameInfo.js","components/GameColumnBet.js","components/GameStartScreen.js","components/GameColumn.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["initialState","play","reset","bet","currentPrize","difficulty","startScreenVisible","textOnMainButton","currentGame","level","cells","activeCells","cellsWithBombs","canChangeDifficulty","canChangeBet","game","state","action","type","payload","history","profit","steps","newRecord","money","gamesPlayed","info","allReducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","RetroLayout","key","children","scanLines","i","scanLineWithKey","className","push","addRecord","record","changeCurrentPrize","changeCells","addMoney","GameField","props","GameHeader","GameColumns","GameColorColumn","color","columnsNumber","style","borderColor","GameOptions","handleGameButtonClick","handleChangeDifficulty","handleChangeBet","onClick","value","onChange","e","GameInfo","GameColumnBet","click","id","playable","clicked","hasBomb","GameStartScreen","GameColumn","purpose","code","historyRecords","forEach","index","handleGameFieldClick","map","cell","Game","dispatch","useDispatch","useSelector","fillPlaygroundWithCells","bombIndexes","mulitplyTable","multiplyier","setBombInThisRow","plus","Math","floor","random","includes","reverse","disableCells","newCells","gameOver","profitIsPositive","clickedCell","createPlayableCells","playableIndexes","changeActiveCells","useEffect","length","filter","playableCells","shouldBePlayable","activeCell","text","changeTextOnMainButton","changeTextOnMainButtonFunction","target","test","console","log","valueString","parseInt","slice","changeDifficulty","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a08502d6.chunk.js","sourcesContent":["const initialState = {\r\n  play: false,\r\n  reset: false,\r\n  bet: 20,\r\n  currentPrize: 0,\r\n  difficulty: null,\r\n  startScreenVisible: true,\r\n  textOnMainButton: \"Choose difficulty\",\r\n  currentGame: {\r\n    level: null,\r\n    cells: [],\r\n    activeCells: [],\r\n    cellsWithBombs: [],\r\n    canChangeDifficulty: true,\r\n    canChangeBet: true\r\n  }\r\n};\r\n\r\nconst game = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"STOP_GAME\":\r\n      return {\r\n        ...state,\r\n        play: false,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"START_GAME\":\r\n      return {\r\n        ...state,\r\n        play: true,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"ENABLE_RESET\":\r\n      return {\r\n        ...state,\r\n        reset: true,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"DISABLE_RESET\":\r\n      return {\r\n        ...state,\r\n        reset: false,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"CHANGE_BET\":\r\n      return {\r\n        ...state,\r\n        bet: action.payload,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"INCREASE_BET\":\r\n      return {\r\n        ...state,\r\n        bet: state.bet + 1,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"DECREASE_BET\":\r\n      return {\r\n        ...state,\r\n        bet: state.bet - 1,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"CHANGE_CURRENT_PRIZE\":\r\n      return {\r\n        ...state,\r\n        currentPrize: action.payload,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"ADD_TO_CURRENT_PRIZE\":\r\n      return {\r\n        ...state,\r\n        currentPrize: state.currentPrize + action.payload,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"CHANGE_DIFFICULTY\":\r\n      return {\r\n        ...state,\r\n        difficulty: action.payload,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"HIDE_START_SCREEN\":\r\n      return {\r\n        ...state,\r\n        startScreenVisible: false,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"SHOW_START_SCREEN\":\r\n      return {\r\n        ...state,\r\n        startScreenVisible: true,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"CHANGE_TEXT_ON_MAIN_BUTTON\":\r\n      return {\r\n        ...state,\r\n        textOnMainButton: action.payload,\r\n        currentGame: { ...state.currentGame }\r\n      };\r\n    case \"INCREASE_LEVEL\":\r\n      return {\r\n        ...state,\r\n        currentGame: {\r\n          ...state.currentGame,\r\n          level: state.currentGame.level + 1\r\n        }\r\n      };\r\n    case \"RESET_LEVEL\":\r\n      return {\r\n        ...state,\r\n        currentGame: {\r\n          ...state.currentGame,\r\n          level: 1\r\n        }\r\n      };\r\n    case \"CHANGE_CELLS\":\r\n      return {\r\n        ...state,\r\n        currentGame: {\r\n          ...state.currentGame,\r\n          cells: action.payload\r\n        }\r\n      };\r\n    case \"CHANGE_ACTIVE_CELLS\":\r\n      return {\r\n        ...state,\r\n        currentGame: {\r\n          ...state.currentGame,\r\n          activeCells: action.payload\r\n        }\r\n      };\r\n    case \"CHANGE_CELLS_WITH_BOMBS\":\r\n      return {\r\n        ...state,\r\n        currentGame: {\r\n          ...state.currentGame,\r\n          cellsWithBombs: action.payload\r\n        }\r\n      };\r\n    case \"ENABLE_DIFFICULTY_CHANGE\":\r\n      return {\r\n        ...state,\r\n        currentGame: {\r\n          ...state.currentGame,\r\n          canChangeDifficulty: true\r\n        }\r\n      };\r\n    case \"DISABLE_DIFFICULTY_CHANGE\":\r\n      return {\r\n        ...state,\r\n        currentGame: {\r\n          ...state.currentGame,\r\n          canChangeDifficulty: false\r\n        }\r\n      };\r\n    case \"ENABLE_BET_CHANGE\":\r\n      return {\r\n        ...state,\r\n        currentGame: {\r\n          ...state.currentGame,\r\n          canChangeBet: true\r\n        }\r\n      };\r\n    case \"DISABLE_BET_CHANGE\":\r\n      return {\r\n        ...state,\r\n        currentGame: {\r\n          ...state.currentGame,\r\n          canChangeBet: false\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default game;\r\n","const initialState = [\r\n  // {\r\n  //   bet: 2,\r\n  //   profit: 0,\r\n  //   steps: 1\r\n  // },\r\n  // {\r\n  //   bet: 20,\r\n  //   profit: 12,\r\n  //   steps: 2\r\n  // }\r\n];\r\n\r\nconst history = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_RECORD\":\r\n      const { bet, profit, steps } = action.payload;\r\n      const newRecord = {\r\n        bet,\r\n        profit,\r\n        steps\r\n      };\r\n      return [...state, newRecord];\r\n    case \"RESET_RECORDS\":\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default history;\r\n","const initialState = {\r\n  money: 1000,\r\n  gamesPlayed: 0\r\n};\r\n\r\nconst info = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_MONEY\":\r\n      return {\r\n        ...state,\r\n        money: state.money + action.payload\r\n      };\r\n    case \"REMOVE_MONEY\":\r\n      return {\r\n        ...state,\r\n        money: state.money - action.payload\r\n      };\r\n    case \"INCREMENT_GAMES_PLAYED\":\r\n      return {\r\n        ...state,\r\n        gamesPlayed: state.gamesPlayed + 1\r\n      };\r\n    case \"RESET_GAMES_PLAYED\":\r\n      return {\r\n        ...state,\r\n        gamesPlayed: 0\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default info;\r\n","import game from \"./game\";\r\nimport history from \"./history\";\r\nimport info from \"./info\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n  game,\r\n  history,\r\n  info\r\n});\r\n\r\nexport default allReducers;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport allReducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst middleware = [];\r\nconst store = createStore(\r\n  allReducers,\r\n  {},\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nconst RetroLayout = ({ children }) => {\r\n  const scanLine = key => <div className=\"scan-line\" key={key}></div>;\r\n  const scanLines = [];\r\n  for (let i = 0; i < 100; i++) {\r\n    //50\r\n    const scanLineWithKey = scanLine(i);\r\n    scanLines.push(scanLineWithKey);\r\n  }\r\n  return (\r\n    <div className=\"retro-layout\">\r\n      <div className=\"retro-layout-inside\">\r\n        <div className=\"scan-lines\">{scanLines}</div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RetroLayout;\r\n","// history\r\n\r\nexport const addRecord = record => ({\r\n  type: \"ADD_RECORD\",\r\n  payload: record\r\n});\r\n\r\nexport const resetRecords = () => ({\r\n  type: \"RESET_RECORDS\"\r\n});\r\n\r\n// game\r\n\r\nexport const stopGame = () => ({\r\n  type: \"STOP_GAME\"\r\n});\r\n\r\nexport const startGame = () => ({\r\n  type: \"START_GAME\"\r\n});\r\n\r\nexport const enableReset = () => ({\r\n  type: \"ENABLE_RESET\"\r\n});\r\n\r\nexport const disableReset = () => ({\r\n  type: \"DISABLE_RESET\"\r\n});\r\n\r\nexport const changeBet = bet => ({\r\n  type: \"CHANGE_BET\",\r\n  payload: bet\r\n});\r\n\r\nexport const increaseBet = () => ({\r\n  type: \"INCREASE_BET\"\r\n});\r\n\r\nexport const decreaseBet = () => ({\r\n  type: \"DECREASE_BET\"\r\n});\r\n\r\nexport const changeCurrentPrize = currentPrize => ({\r\n  type: \"CHANGE_CURRENT_PRIZE\",\r\n  payload: currentPrize\r\n});\r\n\r\nexport const addToCurrentPrize = addedValue => ({\r\n  type: \"ADD_TO_CURRENT_PRIZE\",\r\n  payload: addedValue\r\n});\r\n\r\nexport const changeDifficulty = difficulty => ({\r\n  type: \"CHANGE_DIFFICULTY\",\r\n  payload: difficulty\r\n});\r\n\r\nexport const hideStartScreen = () => ({\r\n  type: \"HIDE_START_SCREEN\"\r\n});\r\n\r\nexport const showStartScreen = () => ({\r\n  type: \"SHOW_START_SCREEN\"\r\n});\r\n\r\nexport const changeTextOnMainButton = text => ({\r\n  type: \"CHANGE_TEXT_ON_MAIN_BUTTON\",\r\n  payload: text\r\n});\r\n\r\nexport const increaseLevel = () => ({\r\n  type: \"INCREASE_LEVEL\"\r\n});\r\n\r\nexport const resetLevel = () => ({\r\n  type: \"RESET_LEVEL\"\r\n});\r\n\r\nexport const changeCells = cells => ({\r\n  type: \"CHANGE_CELLS\",\r\n  payload: cells\r\n});\r\n\r\nexport const changeActiveCells = activeCells => ({\r\n  type: \"CHANGE_ACTIVE_CELLS\",\r\n  payload: activeCells\r\n});\r\n\r\nexport const changeCellsWithBombs = cellsWithBombs => ({\r\n  type: \"CHANGE_CELLS_WITH_BOMBS\",\r\n  payload: cellsWithBombs\r\n});\r\n\r\nexport const disableDifficultyChange = () => ({\r\n  type: \"DISABLE_DIFFICULTY_CHANGE\"\r\n});\r\n\r\nexport const enableDifficultyChange = () => ({\r\n  type: \"ENABLE_DIFFICULTY_CHANGE\"\r\n});\r\n\r\nexport const disableBetChange = () => ({\r\n  type: \"DISABLE_BET_CHANGE\"\r\n});\r\n\r\nexport const enableBetChange = () => ({\r\n  type: \"ENABLE_BET_CHANGE\"\r\n});\r\n\r\n// info\r\n\r\nexport const addMoney = money => ({\r\n  type: \"ADD_MONEY\",\r\n  payload: money\r\n});\r\n\r\nexport const removeMoney = money => ({\r\n  type: \"REMOVE_MONEY\",\r\n  payload: money\r\n});\r\n\r\nexport const incrementGamesPlayed = () => ({\r\n  type: \"INCREMENT_GAMES_PLAYED\"\r\n});\r\n\r\nexport const resetGamesPlayed = money => ({\r\n  type: \"RESET_GAMES_PLAYED\"\r\n});\r\n","import React from \"react\";\r\n\r\nconst GameField = props => <div className=\"game-field\">{props.children}</div>;\r\nexport default GameField;\r\n","import React from \"react\";\r\n\r\nconst GameHeader = props => (\r\n  <div className=\"game-header\">\r\n    <span>Bet game</span>\r\n  </div>\r\n);\r\n\r\nexport default GameHeader;\r\n","import React from \"react\";\r\n\r\nconst GameColumns = props => (\r\n  <div className=\"game-columns\">{props.children}</div>\r\n);\r\n\r\nexport default GameColumns;\r\n","import React from \"react\";\r\n\r\nconst GameColorColumn = ({\r\n  color,\r\n  children,\r\n  columnsNumber,\r\n  startScreenVisible\r\n}) => (\r\n  <div\r\n    className={`column${\r\n      columnsNumber ? ` columns-inside columns-${columnsNumber}` : \"\"\r\n    }${startScreenVisible ? \" start-screen-visible\" : \"\"}`}\r\n    style={{ borderColor: color }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\nexport default GameColorColumn;\r\n","import React from \"react\";\r\n\r\nconst GameOptions = props => {\r\n  const {\r\n    game,\r\n    handleGameButtonClick,\r\n    handleChangeDifficulty,\r\n    handleChangeBet\r\n  } = props;\r\n  return (\r\n    <>\r\n      <button className=\"game-button\" onClick={handleGameButtonClick}>\r\n        {game.textOnMainButton}\r\n      </button>\r\n      <ul className=\"bet\">\r\n        <li>\r\n          <div onClick={() => handleChangeBet(\"-\")}>-</div>\r\n        </li>\r\n        <li>\r\n          <input\r\n            className=\"bet-input\"\r\n            type=\"text\"\r\n            value={game.bet}\r\n            onChange={e => handleChangeBet(\"change\", e)}\r\n          />\r\n        </li>\r\n        <li>\r\n          <div onClick={() => handleChangeBet(\"+\")}>+</div>\r\n        </li>\r\n      </ul>\r\n      <ul className=\"difficulty\">\r\n        <li\r\n          className={`easy${game.difficulty === \"easy\" ? \" active\" : \"\"}`}\r\n          onClick={() => handleChangeDifficulty(\"easy\")}\r\n        >\r\n          easy\r\n        </li>\r\n        <li\r\n          className={`medium${game.difficulty === \"medium\" ? \" active\" : \"\"}`}\r\n          onClick={() => handleChangeDifficulty(\"medium\")}\r\n        >\r\n          medium\r\n        </li>\r\n        <li\r\n          className={`hard${game.difficulty === \"hard\" ? \" active\" : \"\"}`}\r\n          onClick={() => handleChangeDifficulty(\"hard\")}\r\n        >\r\n          hard\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameOptions;\r\n","import React from \"react\";\r\n\r\nconst GameInfo = props => (\r\n  <div className=\"game-info\">\r\n    EASY - 1 bomb / 3 cells\r\n    <br />\r\n    MEDIUM - 1 bomb / 2 cells\r\n    <br />\r\n    HARD - 2 bombs / 3 cells\r\n  </div>\r\n);\r\nexport default GameInfo;\r\n","import React from \"react\";\r\n\r\nconst GameColumnBet = props => {\r\n  const { value, click, id, playable, clicked, hasBomb } = props;\r\n  const className = `game-column-bet${playable ? \" playable\" : \"\"}${\r\n    clicked ? (hasBomb ? \" clicked-negative\" : \" clicked-positive\") : \"\"\r\n  }`;\r\n  return (\r\n    <div className={className} onClick={() => click(id)}>\r\n      {value}$\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameColumnBet;\r\n","// import React from \"react\";\r\n\r\nconst GameStartScreen = props => \"Choose difficulty\";\r\n\r\nexport default GameStartScreen;\r\n","import React from \"react\";\r\n\r\nimport GameColorColumn from \"./GameColorColumn\";\r\nimport GameOptions from \"./GameOptions\";\r\nimport GameInfo from \"./GameInfo\";\r\nimport GameColumnBet from \"./GameColumnBet\";\r\nimport GameStartScreen from \"./GameStartScreen\";\r\n\r\nconst GameColumn = props => {\r\n  const { color, purpose } = props;\r\n\r\n  let code = \"\";\r\n\r\n  if (purpose === \"history\") {\r\n    const { history } = props;\r\n    let i = -3;\r\n    let historyRecords = [];\r\n    history.forEach(record => {\r\n      i += 3;\r\n      for (let index = 0; index < 3; index++) {\r\n        switch (index) {\r\n          case 0:\r\n            historyRecords.push(<div key={i}>{record.bet}</div>);\r\n            break;\r\n          case 1:\r\n            historyRecords.push(<div key={i + 1}>{record.profit}</div>);\r\n            break;\r\n          case 2:\r\n            historyRecords.push(<div key={i + 2}>{record.steps}</div>);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    });\r\n    code = (\r\n      <div className=\"game-column game-history-column\">\r\n        <GameColorColumn color={color}>\r\n          <div>Bet</div>\r\n          <div>Profit</div>\r\n          <div>Steps</div>\r\n          {historyRecords}\r\n        </GameColorColumn>\r\n      </div>\r\n    );\r\n  } else if (purpose === \"game\") {\r\n    const {\r\n      game,\r\n      handleGameButtonClick,\r\n      handleChangeDifficulty,\r\n      handleChangeBet,\r\n      handleGameFieldClick\r\n    } = props;\r\n    const cells = game.currentGame.cells.map(cell => (\r\n      <GameColumnBet\r\n        key={cell.id}\r\n        id={cell.id}\r\n        value={cell.value}\r\n        click={handleGameFieldClick}\r\n        playable={cell.playable}\r\n        hasBomb={cell.hasBomb}\r\n        clicked={cell.clicked}\r\n      />\r\n    ));\r\n\r\n    code = (\r\n      <div className=\"game-column game-game-column\">\r\n        <GameColorColumn\r\n          color={color}\r\n          columnsNumber={`${game.difficulty === \"medium\" ? 2 : 3}`}\r\n          startScreenVisible={game.startScreenVisible}\r\n        >\r\n          {game.startScreenVisible ? <GameStartScreen /> : [...cells]}\r\n        </GameColorColumn>\r\n        <GameOptions\r\n          game={game}\r\n          handleChangeBet={handleChangeBet}\r\n          handleChangeDifficulty={handleChangeDifficulty}\r\n          handleGameButtonClick={handleGameButtonClick}\r\n        />\r\n      </div>\r\n    );\r\n  } else if (purpose === \"info\") {\r\n    const { info } = props;\r\n    code = (\r\n      <div className=\"game-column game-info-column\">\r\n        <GameColorColumn color={color}>\r\n          <div>\r\n            <div>Money: {info.money}$</div>\r\n          </div>\r\n          <div>\r\n            <div>Games Played: {info.gamesPlayed}</div>\r\n          </div>\r\n        </GameColorColumn>\r\n        <GameInfo />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return code;\r\n};\r\n\r\nexport default GameColumn;\r\n","import React, { useEffect } from \"react\";\r\nimport { StoreProvider } from \"easy-peasy\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  addRecord,\r\n  // resetRecords,\r\n  stopGame,\r\n  startGame,\r\n  enableReset,\r\n  disableReset,\r\n  changeBet,\r\n  increaseBet,\r\n  decreaseBet,\r\n  changeCurrentPrize,\r\n  addToCurrentPrize,\r\n  changeDifficulty,\r\n  hideStartScreen,\r\n  // showStartScreen,\r\n  changeTextOnMainButton,\r\n  increaseLevel,\r\n  resetLevel,\r\n  changeCells,\r\n  changeActiveCells,\r\n  changeCellsWithBombs,\r\n  disableDifficultyChange,\r\n  enableDifficultyChange,\r\n  disableBetChange,\r\n  enableBetChange,\r\n  addMoney,\r\n  removeMoney,\r\n  incrementGamesPlayed\r\n  // resetGamesPlayed\r\n} from \"../actions\";\r\n\r\nimport store from \"../store\";\r\nimport GameField from \"../components/GameField\";\r\nimport GameHeader from \"../components/GameHeader\";\r\nimport GameColumns from \"../components/GameColumns\";\r\nimport GameColumn from \"../components/GameColumn\";\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useSelector(state => state.history);\r\n  const game = useSelector(state => state.game);\r\n  const info = useSelector(state => state.info);\r\n\r\n  //\r\n  const fillPlaygroundWithCells = () => {\r\n    // console.log(\"Exec fillPlaygroundWithCells\");\r\n    const { difficulty } = game;\r\n    const easyMultiply = [\r\n      1.46,\r\n      2.12,\r\n      3.08,\r\n      4.48,\r\n      6.52,\r\n      9.49,\r\n      13.81,\r\n      20.09,\r\n      29.23,\r\n      42.52\r\n    ];\r\n    const mediumMultiply = [\r\n      1.94,\r\n      3.76,\r\n      7.3,\r\n      14.16,\r\n      27.48,\r\n      53.31,\r\n      103.42,\r\n      200.64,\r\n      389.24,\r\n      755.12\r\n    ];\r\n    const hardMultiply = [\r\n      2.91,\r\n      8.47,\r\n      24.64,\r\n      71.71,\r\n      208.67,\r\n      607.24,\r\n      1767.06,\r\n      5142.14,\r\n      14963.63,\r\n      43544.16\r\n    ];\r\n\r\n    let cells = [];\r\n    let bombIndexes = [];\r\n    let mulitplyTable = [];\r\n    // Bombs random start\r\n    const multiplyier = difficulty === \"medium\" ? 2 : 3;\r\n    let setBombInThisRow = true;\r\n    let i = 1;\r\n    while (i < 10 * multiplyier) {\r\n      if (setBombInThisRow) {\r\n        const plus = Math.floor(Math.random() * multiplyier);\r\n        bombIndexes.push(i - 1 + plus);\r\n      } else {\r\n        if (i % multiplyier === 0) setBombInThisRow = true;\r\n      }\r\n      i += multiplyier;\r\n    }\r\n    // Bombs random end\r\n\r\n    if (difficulty === \"easy\") {\r\n      mulitplyTable = easyMultiply;\r\n    } else if (difficulty === \"medium\") {\r\n      mulitplyTable = mediumMultiply;\r\n    } else {\r\n      mulitplyTable = hardMultiply;\r\n    }\r\n\r\n    for (let i = 0; i < 10 * multiplyier; i++) {\r\n      const value = Math.floor(\r\n        game.bet * mulitplyTable[Math.floor(i / multiplyier)]\r\n      );\r\n      const hasBomb = bombIndexes.includes(i);\r\n\r\n      cells.push({\r\n        id: i + 1,\r\n        value,\r\n        hasBomb,\r\n        playable: false,\r\n        clicked: false\r\n      });\r\n    }\r\n\r\n    cells.reverse();\r\n\r\n    dispatch(resetLevel());\r\n    dispatch(changeCells(cells));\r\n    dispatch(changeCellsWithBombs(bombIndexes));\r\n  };\r\n\r\n  const disableCells = (playable = false, clicked = false) => {\r\n    // console.log(\"Exec disableCells\");\r\n    const cells = [...game.currentGame.cells];\r\n    const newCells = cells.map(cell => {\r\n      if (playable) cell.playable = false;\r\n      if (clicked) cell.clicked = false;\r\n      return cell;\r\n    });\r\n    dispatch(changeCells([...newCells]));\r\n  };\r\n\r\n  const changeTextOnMainButtonFunction = () => {\r\n    // console.log(\"Exec changeTextOnMainButton\");\r\n    let text = \"\";\r\n    if (!game.play && !game.reset) {\r\n      text = game.difficulty ? \"Click on active field\" : \"Choose difficulty\";\r\n    } else if (game.play && !game.reset) {\r\n      text =\r\n        game.currentGame.level > 1\r\n          ? `Take ${game.currentPrize}$`\r\n          : \"Click on active field\";\r\n    } else if (!game.play && game.reset) {\r\n      text = \"Reset\";\r\n    } else {\r\n      text = \"Not defined\";\r\n    }\r\n    dispatch(changeTextOnMainButton(text));\r\n  };\r\n\r\n  const gameOver = (profitIsPositive = true, clickedCell = null) => {\r\n    // console.log(\"Exec gameOver\");\r\n    const bet = game.bet;\r\n    let profit = null;\r\n    if (game.currentGame.level === 1) {\r\n      profit = clickedCell.value;\r\n    } else {\r\n      profit = game.bet;\r\n    }\r\n    if (!profitIsPositive) profit *= -1;\r\n    const steps = game.currentGame.level;\r\n    dispatch(\r\n      addRecord({\r\n        bet,\r\n        profit,\r\n        steps\r\n      })\r\n    );\r\n    dispatch(addMoney(game.currentPrize));\r\n    dispatch(incrementGamesPlayed());\r\n    dispatch(stopGame());\r\n    dispatch(enableReset());\r\n    dispatch(changeCurrentPrize(0));\r\n    dispatch(disableDifficultyChange());\r\n    dispatch(disableBetChange());\r\n    disableCells(true, false);\r\n  };\r\n\r\n  const createPlayableCells = () => {\r\n    // console.log(\"Exec createPlayableCells\");\r\n    let cells = [...game.currentGame.cells];\r\n    let activeCells = [];\r\n    const multiplyier = game.difficulty === \"medium\" ? 2 : 3;\r\n    const { level } = game.currentGame;\r\n    let playableIndexes = [];\r\n    for (let i = 0; i < multiplyier; i++) {\r\n      playableIndexes.push((level - 1) * multiplyier + i + 1);\r\n    }\r\n    const newCells = cells.map(cell => {\r\n      let playable = false;\r\n\r\n      playableIndexes.forEach(index => {\r\n        if (cell.id === index) playable = true;\r\n      });\r\n\r\n      if (playable) {\r\n        cell.playable = true;\r\n        activeCells.push(cell);\r\n      } else {\r\n        cell.playable = false;\r\n      }\r\n\r\n      return cell;\r\n    });\r\n    dispatch(changeActiveCells(activeCells));\r\n    dispatch(changeCells([...newCells]));\r\n  };\r\n\r\n  const handleChangeBet = (type, e) => {\r\n    // console.log(\"Exec handleChangeBet\");\r\n    if (game.currentGame.canChangeBet) {\r\n      if (type === \"-\") {\r\n        dispatch(decreaseBet());\r\n      } else if (type === \"+\") {\r\n        dispatch(increaseBet());\r\n      } else if (type === \"change\") {\r\n        let value = e.target.value;\r\n        if (value === \"\") value = 0;\r\n        if (!/^[0-9]+$/.test(value)) return console.log(\"not number\");\r\n        const valueString = value + \"\";\r\n        if (valueString.length > 1 && valueString[0] === \"0\")\r\n          value = parseInt(valueString.slice(0));\r\n        dispatch(changeBet(value));\r\n      }\r\n    }\r\n  };\r\n  const handleChangeDifficulty = difficulty => {\r\n    // console.log(\"Exec handleChangeDifficulty\");\r\n    if (\r\n      game.currentGame.canChangeDifficulty &&\r\n      (difficulty === \"easy\" ||\r\n        difficulty === \"medium\" ||\r\n        difficulty === \"hard\")\r\n    ) {\r\n      dispatch(hideStartScreen());\r\n      dispatch(changeDifficulty(difficulty));\r\n    }\r\n  };\r\n  const handleGameButtonClick = () => {\r\n    // console.log(\"Exec handleGameButtonClick\");\r\n    if (game.reset) {\r\n      dispatch(disableReset());\r\n      dispatch(enableBetChange());\r\n      dispatch(enableDifficultyChange());\r\n      disableCells(true, true);\r\n      fillPlaygroundWithCells();\r\n    } else {\r\n      if (game.currentGame.level > 1) {\r\n        if (game.play) {\r\n          //zakonczenie gry\r\n          gameOver();\r\n        } else if (game.difficulty) {\r\n          //rozpoczecie gry\r\n          if (game.reset) {\r\n            disableCells(false, true);\r\n          } else {\r\n            disableCells(true, true);\r\n          }\r\n          fillPlaygroundWithCells();\r\n          if (!game.reset) createPlayableCells();\r\n          dispatch(enableReset());\r\n          dispatch(startGame());\r\n          dispatch(changeCurrentPrize(0));\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleGameFieldClick = id => {\r\n    // console.log(\"Exec handleGameFieldClick\");\r\n    let cells = [...game.currentGame.cells];\r\n    const clickedCell = cells.filter(cell => cell.id === id)[0];\r\n    if (clickedCell.playable) {\r\n      clickedCell.clicked = true;\r\n      //pierwszy wybor gracza\r\n      if (game.currentGame.level === 1) {\r\n        dispatch(startGame());\r\n        dispatch(disableDifficultyChange());\r\n        dispatch(enableBetChange());\r\n        dispatch(removeMoney(game.bet));\r\n      }\r\n\r\n      if (clickedCell.hasBomb) {\r\n        //game over\r\n        gameOver(false, clickedCell);\r\n      } else {\r\n        //can play\r\n        dispatch(addToCurrentPrize(clickedCell.value));\r\n        dispatch(increaseLevel());\r\n        dispatch(disableDifficultyChange());\r\n        dispatch(enableBetChange());\r\n      }\r\n    }\r\n  };\r\n  //\r\n  useEffect(() => {\r\n    // console.log(\"Exec useEffect game.play\");\r\n    createPlayableCells();\r\n  }, [game.play]);\r\n  //\r\n  useEffect(() => {\r\n    // console.log(\"Exec useEffect game.bet\");\r\n    if (!game.play) fillPlaygroundWithCells();\r\n  }, [game.bet]);\r\n  //\r\n  useEffect(() => {\r\n    // console.log(\"Exec useEffect game.difficulty\");\r\n    fillPlaygroundWithCells();\r\n  }, [game.difficulty]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"Exec useEffect game.currerntGame.level\");\r\n    if (game.currentGame.level) {\r\n      createPlayableCells();\r\n    }\r\n  }, [game.currentGame.level]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"Exec useEffect game.currentGame.cells\");\r\n    if (game.currentGame.cells.length && !game.reset) {\r\n      const activeCellsOnGameField = game.currentGame.cells.filter(\r\n        cell => cell.playable\r\n      );\r\n      if (!activeCellsOnGameField.length) {\r\n        createPlayableCells();\r\n      }\r\n    }\r\n    const playableCells = game.currentGame.cells.filter(cell => cell.playable);\r\n    if (game.reset && playableCells.length) {\r\n      disableCells(true, false);\r\n    }\r\n  }, [game.currentGame.cells]);\r\n  useEffect(() => {\r\n    // console.log(\"Exec useEffect game.currentGame.activeCells\");\r\n    const { activeCells } = game.currentGame;\r\n    if (activeCells.length) {\r\n      const cells = [...game.currentGame.cells];\r\n      const newCells = cells.map(cell => {\r\n        let shouldBePlayable = false;\r\n        activeCells.forEach(activeCell => {\r\n          if (cell.id === activeCell.id) {\r\n            shouldBePlayable = true;\r\n          }\r\n        });\r\n        if (shouldBePlayable) {\r\n          cell.playable = true;\r\n        } else {\r\n          cell.playable = false;\r\n        }\r\n        return cell;\r\n      });\r\n      dispatch(changeCells([...newCells]));\r\n    }\r\n  }, [game.currentGame.activeCells]);\r\n  useEffect(() => {\r\n    // console.log(\"Exec useEffect textOnButton\");\r\n    changeTextOnMainButtonFunction();\r\n  }, [game.play, game.reset, game.difficulty, game.currentGame.level]);\r\n  //\r\n  return (\r\n    <StoreProvider store={store}>\r\n      <GameField>\r\n        <GameHeader />\r\n        <GameColumns>\r\n          <GameColumn purpose=\"history\" color=\"red\" history={history} />\r\n          <GameColumn\r\n            purpose=\"game\"\r\n            color=\"blue\"\r\n            game={game}\r\n            handleChangeBet={handleChangeBet}\r\n            handleChangeDifficulty={handleChangeDifficulty}\r\n            handleGameButtonClick={handleGameButtonClick}\r\n            handleGameFieldClick={handleGameFieldClick}\r\n          />\r\n          <GameColumn purpose=\"info\" color=\"yellow\" info={info} />\r\n        </GameColumns>\r\n      </GameField>\r\n    </StoreProvider>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport RetroLayout from \"./components/RetroLayout\";\r\nimport Game from \"./components/Game\";\r\n\r\nfunction App() {\r\n  return (\r\n    <RetroLayout>\r\n      <Game />\r\n    </RetroLayout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./css/index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}